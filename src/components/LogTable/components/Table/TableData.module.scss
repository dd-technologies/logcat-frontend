@import "../../../../css/veriables.module.scss";

.OuterTable {
  .BootstrapTable {
    display: flex;
    justify-content: space-between;
    padding-top: 20px;
    padding-left: 10px;
    padding-right: 10px;
    background-color: $tableHaderBackgorundColor;
    & input {
      height: 35px !important;
    }

    .searchbar {
      // border: 2px solid red;
      width: 100%;

      & label {
        width: 100%;
      }

      & input {
        font-size: 0.9rem;
      }
    }

    .chipOuter {
      width: 40% !important;
      display: grid;
      height: auto !important;

      /* define the number of grid columns */
      grid-template-columns: repeat(auto-fit, minmax(125px, 1fr));
      margin-right: 5px;
      margin-left: 5px;
      // border: 2px solid red;
    }

    .chip {
      background-color: $backgroundColor;
      border-radius: 20px;
      padding: 10px;
      height: 30px;
      width: 120px;
      display: flex !important;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
      margin: 2px;

      & p {
        font-size: 0.8rem !important;
      }
      & svg {
        color: #fff;
      }

      // color: $stackBackgroundColor;
    }

    & button {
      color: $defaultTextColor !important;
      height: 35px !important;
      font-weight: 500;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    border-bottom: $borderBottom;

    .GoogleDirve {
      display: flex;
      justify-content: center;
    }

    .filterOptions {
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      padding-bottom: 20px;
    }
    .filterGraphFirstSction {
      color: $activehrefText !important;
      height: 35px !important;
      cursor: pointer;
      padding: 10px;
      border-radius: $buttonBorderRaduous;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 12px;
    }

    .TopButton {
      display: flex !important;
      justify-content: space-between;
      padding-left: 10px !important;
      padding-right: 10px !important;
    }
  }
}

.ViewButton {
  display: flex;
  justify-content: flex-end;
  border-radius: 50px !important;
  color: $backgroundColor;
}

.ActiveOption {
  background-color: $backgroundColor;
  color: $defaultTextColor;
  border-radius: 10px;
  padding: 5px;
  display: flex;
  align-items: center;
}

.DateSection {
  & input {
    margin-top: 10px;
    border-radius: 10px;
    padding: 5px;
    border: 1px solid rgba(0, 0, 0, 0.6);
  }
}

.perPageOuter {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  .perPagesectionInner {
    margin-top: 5px;
  }
  .perPagesectionInnerActive {
    background-color: $backgroundColor !important;
    color: $defaultTextColor;
    padding: 5px;
    border-radius: 30px;
    width: 30px;
    height: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

.DefaultOption {
  color: $activehrefText;
  padding: 5px;
}

.StatusInnerSecion {
  width: 50%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 5px;

  input[type="checkbox"]:checked {
    background-color: $activehrefText;
  }
  input[type="checkbox"]:checked:after {
    content: "\2713";
    color: white;
  }

  input[type="checkbox"] {
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20px !important;
    height: 20px !important;
    appearance: none;
    border: 1px solid $activehrefText;
    box-shadow: none;
    font-size: 1em;
  }
}

// react bootstrap table css
.expandedRow {
  // height: 20px !important;
  @media screen and (min-width: 600px) and (max-width: 1200px) {
    width: 150px !important;
    overflow: hidden !important;
  }
  @media screen and (min-width: 1200px) and (max-width: 1600px) {
    width: 110% !important;
    overflow: hidden !important;
  }
  @media screen and (min-width: 1600px) and (max-width: 1920px) {
    width: 110% !important;
    // background-color: red !important;
    overflow: hidden !important;
  }
}

// updated css
.dataSection {
  & svg {
    color: red !important;
  }
}
